{"challenges":[null,{"title":"It's that time of year again...","description":"Write a progrsm that asks a user for their name and outputs `Merry christmas, [name]`","sent":true},{"title":"Crackers!","description":"Write a program that plays christmas crackers with you - that is a program that asks if you want to pull a cracker with it and if so outputs a random prize & joke (the jokes have to be good, or else...)","sent":true},{"title":"I wish for a white christmas... (Day 3)","description":"Write a program that shows a snowman on the screen!","sent":true},{"title":"test","description":"test","sent":true},{"title":"You can't have Christmas without a tree! (Day 5)","description":"Write a program that prints an ascii Christmas tree to the console - up to you what it looks like! The user must be prompted to enter the height of the tree.","sent":true},null,null,null,null,null,null,{"title":"Merry Christmas and a happy new Merry Christmas and a happy new Merry Ch...","description":"Santa is looking for a way to distribute the present making to all the elves equally. He has an array of values that looks like this : [1, 2, 2, 3, 1]. Each value in the array represents a present, and the higher the value, the harder the present is to make. You, as Santa's lead programmer, are tasked with writing a program, that, given a number n of elves and an array of present difficulties, must split the array into n smaller arrays which all have the same total sum of values.","sent":true},{"title":"Countdown... (Day 13)","description":"Write a program that counts down to Christmas (midnight between the 24th and the 25) every second. Your program should be designed to never be out of sync with the actual time (i.e if you leave it running forever it will still be consistent)","sent":true},null,null,{"title":"What should I get? (Day 16)","description":"Write a program that uses web scraping to get the 10 most popular presents, and print them.\nPlease note that the bot may be offline, so check if it is back online before submitting.","sent":true},{"title":"Down we go! (Day 17)","description":"Write a simple game (can be command line or GUI) that has you travelling down a chimney avoiding obstacles! The only condition is that it has to be fun!","sent":true},{"title":"Cards! (Day 18)","description":"Write a program that allows the user to create and customise a Christmas card! You can use whatever editor type you want, whever it be drag n' drop, CLI or other. You should also be able to save/load card designs from a file.","sent":true},{"title":"A wonderful world! (Day 19)","description":"Write a program that outputs a different Christmas tradition from around the world each time it is run. You can use web scraping, the google API or whatever you want, really!","sent":true},{"title":"Slippery! (Day 20)","description":"Write a program that displays an animation of an icicle falling!","sent":true},{"title":"Its getting cold... (Day 21)","description":"Write a program that uses APIs to output the current temperature where the user is!","sent":true},{"title":"Christmas on the web! (Day 22)","description":"Write a simple client/server program that allows users to post and view Christmas messages from others!","sent":true},{"title":"Mystery... (Day 23)","description":"What is the name of the animal in this file? https://cdn.discordapp.com/attachments/789576292169285632/791076931663691826/mystery.exe Hint: ","sent":true},{"title":"Merry Christmas! (Day 24)","description":"Write a program that tells the user how long they have to wait until Santa comes! You may **not** ask them to input their timezone and you should assume Santa comes at 0:00 on the 25th of december.","sent":true}],"participants":{"ammar":{"name":"ammar","score":11,"pending":0,"submissions":[null,{"pending":false,"submissionText":""}]},"compiled":{"name":"compiled","score":12,"pending":0,"submissions":[null,{"pending":false,"submissionText":""},{"submissionText":"https://jsfiddle.net/compiled/z8qefj2t/","pending":false},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,{"submissionText":"Reindeer","pending":false}]},"ThatsLiamS":{"name":"ThatsLiamS","score":10,"pending":0,"submissions":[null,{"pending":false,"submissionText":""},{"submissionText":"```python\nimport random\njokes = [\"\",\"Which famous playwright was terrified of Christmas? Noël Coward!\",\"What did Adam say the day before Christmas? `It’s Christmas, Eve!`\",\"What is the best Christmas present in the world? A broken drum, you just can’t beat it!\",\"Who delivers presents to baby sharks at Christmas? Santa Jaws!\", \"What do Santa’s little helpers learn at school? The elf-abet!\", \"What happened to the man who stole an Advent Calendar? He got 25 days!\"]\nprizes = [\"Whistle\", \"Plastic Animal\", \"Dog Tag\", \"Spring\", \"Toe Nailer Clipper\", \"Few Marbles\"]\nhats = [\"Red\",\"White\",\"Purple\",\"Yellow\",\"Green\", \"Blue\"]\n\nanswer = input(\"Would You Like To Pull A Cracker With Me? [yes/no] \").lower()\nwhile answer == \"yes\":\n j = random.randint(0, len(jokes))\n p = random.randint(0, len(prizes))\n h = random.randint(0, len(hats))\n\n joke = jokes[j - 1]\n prize = prizes[p - 1]\n hat = hats[h - 1]\n\n print(\"\\nYou Have Won A\",prize,\"And Your Joke Is\\n\",joke,\"\\nAnd Of Course A\",hat,\"Chrismas Hat\")\n answer = input(\"\\nWould You Like To Pull A Cracker With Me? [yes/no] \").lower()```","pending":false},{"submissionText":"```python def snowman():\n print(\" .-~~\\ \\n / \\ _\\n ~x .-~_)_\\n ~x\\\".-~ ~-.\\n _ ( / \\ _\\n || T o o Y ||\\n ==:l l < ! I;==\\n \\\\ \\ .__/ / //\\n \\\\ ,r\\\"-,___.-'r.//\\n }^ \\.( ) _.'//.\\n / }~Xi--~ // \\ \\n Y Y I\\ \\ \\\" Y \\n | | |o\\ \\ | \\n | l_l Y T |\\n l \\\"o l_j ! \\n \\ / \\n ___,.---^. o .^---.._____ \\n\\\"~~~ \\\" ~ ~~~\\\"\")\n return\n\nsnowman()```","pending":false}]},"RS":{"name":"RS","score":1,"pending":0,"submissions":[null,{"pending":false,"submissionText":""}]},"LootReaper":{"name":"LootReaper","score":26,"pending":3,"submissions":[null,{"pending":false,"submissionText":""},{"submissionText":"```","pending":false},null,null,null,null,null,null,null,null,null,null,null,null,{"submissionText":"```C++\n#include <chrono>\n#include <iostream>\n#include <cstdlib>\n\n#if defined(_WIN32) || defined(WIN32) || defined(_WIN32_)\n#define PLATFORM_WINDOWS\n#endif\n\nstatic void output() noexcept\n{\n using namespace std::chrono;\n // Friday, 25 December 2020 00:00:00 GMT-08:00 in epoch.\n static constexpr long long int xMasInEpoch = 1608883200ll;\n\n#ifdef PLATFORM_WINDOWS\n std::system(\"cls\");\n#else\n std::system(\"clear\");\n#endif\n\n std::cout << \"-------- Christmas Day countdown. --------\\n\";\n std::cout << \"> \" << xMasInEpoch - time_point_cast<seconds>(system_clock::now()).time_since_epoch().count() << \" seconds left until Christmas Day.\\n\";\n}\n\nint main()\n{\n using namespace std::chrono;\n output();\n\n steady_clock::time_point lastTime{steady_clock::now()};\n while (true)\n {\n const steady_clock::time_point now{steady_clock::now()};\n if (now - lastTime >= seconds{1})\n {\n output();\n lastTime = now;\n }\n }\n\n return 0;\n}\n```","pending":false},{"submissionText":"```https://drive.google.com/file/d/1iF8TzJLJkO987ltchPaXxtefENZHz7uQ/view?usp=sharing```","pending":false},{"submissionText":"```https://its-artem.itch.io/suspicious-chimney```","pending":false},{"submissionText":"```https://drive.google.com/file/d/1MtTsWcqkI2gS_xZINeQ_G71WQu7GFK7X/view?usp=sharing```","pending":true},{"submissionText":"```https://pastebin.com/BeUxnCik```","pending":false},{"submissionText":"```https://pastebin.com/DMskfQ3R```","pending":false},{"submissionText":"```Python\nimport requests\n\nlocation = input(\"Enter your city name: \")\n\nreq = requests.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + location + \"&appid=ea1a72dd406e8ad71c71a2f8381a9dc6\")\n\njson = req.json()\ntemp = json[\"main\"][\"temp\"]\n\nprint(\"Current temperature from the Open Weather Map:\")\nprint(\"Celsius: \" + str(round(temp - 273.15, 1)))\nprint(\"Fahrenheit: \" + str(round((temp - 273.15) * 9/5 + 32, 1)))\nprint(\"Kelvin: \" + str(round(temp, 1)))\n```","pending":false},{"submissionText":"```https://drive.google.com/file/d/1T9elUfWykP-q4QYKjyRUW7W85wM9uT1R/view?usp=sharing```","pending":true},{"submissionText":"reindeer","pending":false},{"submissionText":"```C++\n#include <chrono>\n#include <iostream>\n#include <cstdlib>\n\n#if defined(_WIN32) || defined(WIN32) || defined(_WIN32_)\n#define PLATFORM_WINDOWS\n#endif\n\nstatic void output() noexcept\n{\n namespace ch = std::chrono;\n // Friday, 25 December 2020 00:00:00 GMT-08:00 in epoch.\n static constexpr long long int xMasInEpoch{1608883200ll};\n\n#ifdef PLATFORM_WINDOWS\n std::system(\"cls\");\n#else\n std::system(\"clear\");\n#endif\n\n const long long int seconds{xMasInEpoch - ch::time_point_cast<ch::seconds>(ch::system_clock::now()).time_since_epoch().count()};\n std::cout << \"-------- Christmas Day countdown. --------\\n\";\n std::cout << \"Santa will come in \" << (seconds / 3600 ) << \" hours, \" << (seconds / 60) % 60 << \" minutes, and \" << seconds % 60 << \" seconds.\\n\";\n}\n\nint main()\n{\n namespace ch = std::chrono;\n output();\n\n ch::steady_clock::time_point lastTime{ch::steady_clock::now()};\n while (true)\n {\n const ch::steady_clock::time_point now{ch::steady_clock::now()};\n if (now - lastTime >= ch::seconds{1})\n {\n output();\n lastTime = now;\n }\n }\n\n return 0;\n}\n```","pending":true}]},"mneemuch":{"name":"mneemuch","score":3,"pending":0,"submissions":[null,{"pending":false,"submissionText":""},{"submissionText":"`import java.util.Random;\nimport java.util.Scanner;\n\npublic class Day2 {\n public static void main(String[] args) {\n //Get input (name) from user and display: Merry Christmas (name)\n Scanner myScanner = new Scanner(System.in);\n System.out.print(\"Want to pull a cracker?(Yes/No): \");\n String inputString = myScanner.nextLine();\n \n String[] jokes = {\n \"What did you do to make you code work?\\nI don't really know all I care is that it works!\",\n \"Why did the Programmer quit? \\nHe didn't get arrays\",\n \"Damn I cant get this code to work.\\nsadness++\",\n \"Teslas be like don'tCrash()\",\n \"\\\"Algorithm(Noun)\\\" Word used by programmers when they don't want to explain code\"};\n\n String[] prize = {\n \"Here is some sleep, you been coding for too long\",\n \"Coffee, you'll need it for the all nighter\",\n \"New keyboard, because you broke the last one because of a bug :P\",\n \"Blue light glasses, for the all nighters for coding of course ;)\"\n };\n\n if (inputString.equalsIgnoreCase(\"Yes\")) {\n System.out.println(\"\\nJoke:\\n\" + jokes[numSelector()]);\n System.out.println(\"\\nYour prize:\\n\" + prize[numSelector()]);\n } else {\n System.out.println(\"You boring :P\");\n }\n }\n\n public static int numSelector() {\n Random rand = new Random();\n int randNum = rand.nextInt(4);\n return randNum;\n }\n}\n`","pending":false}]},"Rstar":{"name":"Rstar","score":3,"pending":0,"submissions":[null,{"pending":false,"submissionText":""},{"submissionText":"```\n!pip install pyjokes\nimport pyjokes\nimport random\nwhile True:\n cond=str(input(\"\\nPull the Cracker [yes/no]: \")).strip()\n if(cond==\"yes\"):\n print(\"Yay ! you got prize as : \",random.choice([\"5 chocolates\",\"100$\",\"apple watch\",\"gold coin\"]))\n print(\"Joke : \",pyjokes.get_joke())\n else:\n print(\"😊\")\n break\n```","pending":false}]},"onetesseract":{"name":"onetesseract","score":1,"pending":0,"submissions":[null,{"pending":false,"submissionText":""}]},"cute.as.ducks":{"name":"cute.as.ducks","score":0,"pending":1,"submissions":[null,null,{"submissionText":"testing testing","pending":false},{"submissionText":"test","pending":true},null,null,null,null,null,null,null,{"submissionText":"test","pending":false}]},"Gauravsingh":{"name":"Gauravsingh","score":30,"pending":5,"submissions":[null,{"pending":false,"submissionText":""},null,null,null,null,null,null,null,null,null,null,null,null,{"submissionText":"```perl\nuse feature 'say';for(my $i=20;$i>=1;$i--){print q{\n )\n ) \\\n / ) (\n \\(_)/\n};for(my $x=0;$x<$i;$x++){say\" | |\";}sleep(2);print\"\\033[2J\";}say\"Merry Christmas!\"\n```","pending":false},{"submissionText":"```sh\nwhile [[ $(( $(date +%s -d \"12/25/2020\") - $( date +%s ) )) > 0 ]] \n do\n echo \"$(( $(date +%s -d \"12/25/2020\") - $( date +%s ) )) seconds till Christmas\" | figlet -c\n done\n```","pending":true},{"submissionText":"```js\nconst cheerio = require('cheerio')\nconst request = require('request')\n\nrequest({\n method: 'GET',\n url: 'https://www.goodhousekeeping.com/holidays/gift-ideas/g34330062/amazon-christmas-gifts/'\n}, (err, res, body) => {\n\n if (err) return console.error(err)\n\n let $ = cheerio.load(body)\n let gifts = []\n $('.listicle-slide-hed-text').each(function (i, e) {\n gifts[i] = $(this).text()\n })\n console.log(\"Top 10 Christmas Presents are: \")\n gifts.forEach(function (gift, index) {\n if(index>=10)return\n console.log(index+1,\":\",gift)\n })\n})\n\n```","pending":false},{"submissionText":"```https://github.com/gauravsingh5/ChristmasGame```","pending":true},{"submissionText":"```https://pastebin.com/di767J72```","pending":false},{"submissionText":"```js\nconst cheerio = require('cheerio')\nconst request = require('request')\n\nrequest({\n method: 'GET',\n url: 'https://www.momondo.com/discover/christmas-traditions-around-the-world'\n}, (err, res, body) => {\n\n if (err) return console.error(err)\n\n let $ = cheerio.load(body)\n let gifts = []\n $('h2').each(function (i, e) {\n gifts[i] = $(this).text()\n })\n console.log(\"Different Christmas traditions around the world are: \")\n gifts.forEach(function (gift, index) {\n console.log(index+1,\":\",gift)\n })\n})\n```","pending":false},{"submissionText":"```perl\n# Language name -> Perl\nuse feature 'say';my $icicle = q{ \\ /\n \\ /\n \\ /\n \\/};for(my $x=0;$x<10;$x++){say $icicle;sleep(2);print\"\\033[2J\";}print \"Icicle\";\n```","pending":true},{"submissionText":"```js\nconst weather = require('weather-js')\nconst readline = require('readline')\n\nconst rl = readline.createInterface({\n input: process.stdin,\n output: process.stdout\n})\n\nrl.question('Please enter name of your city : ', (city) => {\n rl.question('Please enter the format of temperature[C/F] : ', (format) => {\n weather.find({search: city, degreeType: format}, function(err, result) {\n if(err) console.log(err)\n console.log(\"The temperature at your location is \"+result[0]['current']['temperature']+`°${format}.`)\n })\n rl.close()\n })\n})\n```","pending":false},{"submissionText":"```https://github.com/gauravsingh5/ChristmasChat```","pending":true},{"submissionText":"```reindeer```","pending":false},{"submissionText":"```sh\nS=$(( $(date +%s -d \"12/25/2020\") - $( date +%s ) ));printf '%dh:%dm:%ds Until Christmas!!\\n' $(($S/3600)) $(($S%3600/60)) $(($S%60))\n```","pending":true}]},"username":{"name":"username","score":14,"pending":0,"submissions":[null,{"pending":false,"submissionText":""}]},"wookie":{"name":"wookie","score":1,"pending":0,"submissions":[null,{"pending":false,"submissionText":""}]}}}